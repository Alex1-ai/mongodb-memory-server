(self.webpackChunkmongodb_memory_server_website=self.webpackChunkmongodb_memory_server_website||[]).push([[855],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return c}});var o=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=o.createContext({}),d=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=d(e.components);return o.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=d(t),c=i,k=m["".concat(p,".").concat(c)]||m[c]||u[c]||r;return t?o.createElement(k,a(a({ref:n},s),{},{components:t})):o.createElement(k,a({ref:n},s))}));function c(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var d=2;d<r;d++)a[d]=t[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7229:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return s},default:function(){return m}});var o=t(2122),i=t(9756),r=(t(7294),t(3905)),a=["components"],l={id:"config-options",title:"Config Options"},p=void 0,d={unversionedId:"api/config-options",id:"api/config-options",isDocsHomePage:!1,title:"Config Options",description:"List of all Config Options",source:"@site/../docs/api/config-options.md",sourceDirName:"api",slug:"/api/config-options",permalink:"/mongodb-memory-server/docs/api/config-options",editUrl:"https://github.com/nodkz/mongodb-memory-server/edit/master/docs/../docs/api/config-options.md",version:"current",frontMatter:{id:"config-options",title:"Config Options"},sidebar:"api",previous:{title:"Welcome to the API",permalink:"/mongodb-memory-server/docs/api/index-api"},next:{title:"MongoMemoryServer",permalink:"/mongodb-memory-server/docs/api/classes/mongo-memory-server"}},s=[{value:"List of Config Options",id:"list-of-config-options",children:[{value:"DOWNLOAD_DIR",id:"download_dir",children:[]},{value:"PLATFORM",id:"platform",children:[]},{value:"ARCH",id:"arch",children:[]},{value:"VERSION",id:"version",children:[]},{value:"DEBUG",id:"debug",children:[]},{value:"DOWNLOAD_MIRROR",id:"download_mirror",children:[]},{value:"DOWNLOAD_URL",id:"download_url",children:[]},{value:"PREFER_GLOBAL_PATH",id:"prefer_global_path",children:[]},{value:"DISABLE_POSTINSTALL",id:"disable_postinstall",children:[]},{value:"SYSTEM_BINARY",id:"system_binary",children:[]},{value:"MD5_CHECK",id:"md5_check",children:[]},{value:"ARCHIVE_NAME",id:"archive_name",children:[]},{value:"RUNTIME_DOWNLOAD",id:"runtime_download",children:[]},{value:"USE_HTTP",id:"use_http",children:[]}]},{value:"How to use them in the package.json",id:"how-to-use-them-in-the-packagejson",children:[]},{value:"How to use them as Environment Variables",id:"how-to-use-them-as-environment-variables",children:[]}],u={toc:s};function m(e){var n=e.components,t=(0,i.Z)(e,a);return(0,r.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"List of all Config Options"),(0,r.kt)("h2",{id:"list-of-config-options"},"List of Config Options"),(0,r.kt)("h3",{id:"download_dir"},"DOWNLOAD_DIR"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"DOWNLOAD_DIR")," is used to set where the binaries will be located in, this will overwrite all other directories"),(0,r.kt)("p",null,"Directory Priority:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"DOWNLOAD_DIR (Environment Variable over package.json)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"~/.cache/mongodb-binaries")," (Home Directory Cache) (if ",(0,r.kt)("a",{parentName:"li",href:"#prefer_global_path"},(0,r.kt)("inlineCode",{parentName:"a"},"PREFER_GLOBAL_PATH"))," is active, or binary already exists)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"projectRoot/node_modules/.cache/mongodb-binaries")," (node-modules cache)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"./mongodb-binaries")," (relative to ",(0,r.kt)("inlineCode",{parentName:"li"},"process.cwd()"),")")),(0,r.kt)("p",null,"Format:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/path/to/binary/")," (POSIX)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"C:/path/to/binary/")," (DOS)")),(0,r.kt)("h3",{id:"platform"},"PLATFORM"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"PLATFORM")," is used to overwrite which platform should be downloaded"),(0,r.kt)("p",null,"Valid Options are ",(0,r.kt)("inlineCode",{parentName:"p"},"win32"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"darwin"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"linux"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"sunos")),(0,r.kt)("h3",{id:"arch"},"ARCH"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"ARCH")," is used to overwrite the Architecture to download for"),(0,r.kt)("p",null,"Valid Options are ",(0,r.kt)("inlineCode",{parentName:"p"},"ia32"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"x64"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"arm64")),(0,r.kt)("h3",{id:"version"},"VERSION"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"VERSION")," is used to set what mongodb version should be downloaded"),(0,r.kt)("p",null,"Default: ",(0,r.kt)("inlineCode",{parentName:"p"},"4.0.25")),(0,r.kt)("h3",{id:"debug"},"DEBUG"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"DEBUG")," is used to enable Debug Output"),(0,r.kt)("h3",{id:"download_mirror"},"DOWNLOAD_MIRROR"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"DOWNLOAD_MIRROR")," is used to set which mirror to use"),(0,r.kt)("p",null,"Default / Format: ",(0,r.kt)("inlineCode",{parentName:"p"},"https://fastdl.mongodb.org")," (protocol needs to be included)"),(0,r.kt)("h3",{id:"download_url"},"DOWNLOAD_URL"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"DOWNLOAD_URL")," is used to overwrite the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"complete"))," URL (including ",(0,r.kt)("a",{parentName:"p",href:"#DOWNLOAD_MIRROR"},(0,r.kt)("inlineCode",{parentName:"a"},"DOWNLOAD_MIRROR")),")"),(0,r.kt)("p",null,"Format: ",(0,r.kt)("inlineCode",{parentName:"p"},"https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1604-4.0.20.tgz")),(0,r.kt)("h3",{id:"prefer_global_path"},"PREFER_GLOBAL_PATH"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"PREFER_GLOBAL_PATH")," is used to force download into ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.cache/mongodb-binaries")," instead of local folder"),(0,r.kt)("h3",{id:"disable_postinstall"},"DISABLE_POSTINSTALL"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"DISABLE_POSTINSTALL")," is used to skip all ",(0,r.kt)("inlineCode",{parentName:"p"},"postinstall")," scripts"),(0,r.kt)("h3",{id:"system_binary"},"SYSTEM_BINARY"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"SYSTEM_BINARY")," is used to set the path to an system binary already existing on the system"),(0,r.kt)("p",null,"Format:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/path/to/binary/mongod")," (POSIX)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"C:/path/to/binary/mongod.exe")," (DOS)")),(0,r.kt)("h3",{id:"md5_check"},"MD5_CHECK"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"MD5_CHECK")," is used to enable an md5 check after download"),(0,r.kt)("p",null,"Default: ",(0,r.kt)("inlineCode",{parentName:"p"},"false")),(0,r.kt)("h3",{id:"archive_name"},"ARCHIVE_NAME"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"ARCHIVE_NAME")," is used to overwrite the complete archive name"),(0,r.kt)("p",null,"Format: ",(0,r.kt)("inlineCode",{parentName:"p"},"mongodb-linux-x86_64-ubuntu1604-4.0.20.tgz")),(0,r.kt)("h3",{id:"runtime_download"},"RUNTIME_DOWNLOAD"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"RUNTIME_DOWNLOAD")," is used to disable downloading while being in something like ",(0,r.kt)("inlineCode",{parentName:"p"},".start")),(0,r.kt)("p",null,"Default: ",(0,r.kt)("inlineCode",{parentName:"p"},"true")),(0,r.kt)("h3",{id:"use_http"},"USE_HTTP"),(0,r.kt)("p",null,"Option ",(0,r.kt)("inlineCode",{parentName:"p"},"USE_HTTP")," is used to use ",(0,r.kt)("inlineCode",{parentName:"p"},"http")," over ",(0,r.kt)("inlineCode",{parentName:"p"},"https")),(0,r.kt)("p",null,"Default: ",(0,r.kt)("inlineCode",{parentName:"p"},"false")),(0,r.kt)("h2",{id:"how-to-use-them-in-the-packagejson"},"How to use them in the package.json"),(0,r.kt)("p",null,"To use the config options in the ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),", they need to be camelCased (and without ",(0,r.kt)("inlineCode",{parentName:"p"},"_"),"), and need to be in the property ",(0,r.kt)("inlineCode",{parentName:"p"},"config.mongodbMemoryServer")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "config": {\n    "mongodbMemoryServer": {\n      "downloadDir": "/path/to/DownloadDir"\n    }\n  }\n}\n')),(0,r.kt)("p",null,"By default it uses the nearest (upwards) ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"process.cwd()"),".\nTo change this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { findPackageJson } from \"mongodb-memory-server-core/lib/util/resolveConfig\";\n\nfindPackageJson('/custom/path');\n\n// OR\n\nprocess.chdir('/custom/path'); // not recommended\n")),(0,r.kt)("h2",{id:"how-to-use-them-as-environment-variables"},"How to use them as Environment Variables"),(0,r.kt)("p",null,"For Environment Variables an config option must be prefixed with ",(0,r.kt)("inlineCode",{parentName:"p"},"MONGOMS_")),(0,r.kt)("p",null,"Example: ",(0,r.kt)("inlineCode",{parentName:"p"},"MONGOMS_DOWNLOAD_DIR")),(0,r.kt)("p",null,"For boolean Variables, the following will be interpreted as ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"true 1 on yes")))}m.isMDXComponent=!0}}]);