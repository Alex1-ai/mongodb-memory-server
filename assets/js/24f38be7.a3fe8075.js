"use strict";(self.webpackChunkmongodb_memory_server_website=self.webpackChunkmongodb_memory_server_website||[]).push([[855],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return k}});var o=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=o.createContext({}),s=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=s(e.components);return o.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(t),k=i,c=u["".concat(p,".").concat(k)]||u[k]||m[k]||a;return t?o.createElement(c,r(r({ref:n},d),{},{components:t})):o.createElement(c,r({ref:n},d))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,r=new Array(a);r[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var s=2;s<a;s++)r[s]=t[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},11:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return m}});var o=t(7462),i=t(3366),a=(t(7294),t(3905)),r=["components"],l={id:"config-options",title:"Config Options"},p=void 0,s={unversionedId:"api/config-options",id:"api/config-options",title:"Config Options",description:"List of all Config Options",source:"@site/../docs/api/config-options.md",sourceDirName:"api",slug:"/api/config-options",permalink:"/mongodb-memory-server/docs/api/config-options",draft:!1,editUrl:"https://github.com/nodkz/mongodb-memory-server/edit/master/docs/../docs/api/config-options.md",tags:[],version:"current",frontMatter:{id:"config-options",title:"Config Options"},sidebar:"api",previous:{title:"Welcome to the API",permalink:"/mongodb-memory-server/docs/api/index-api"},next:{title:"MongoMemoryServer",permalink:"/mongodb-memory-server/docs/api/classes/mongo-memory-server"}},d={},m=[{value:"List of Config Options",id:"list-of-config-options",level:2},{value:"DOWNLOAD_DIR",id:"download_dir",level:3},{value:"PLATFORM",id:"platform",level:3},{value:"ARCH",id:"arch",level:3},{value:"VERSION",id:"version",level:3},{value:"DEBUG",id:"debug",level:3},{value:"DOWNLOAD_MIRROR",id:"download_mirror",level:3},{value:"DOWNLOAD_URL",id:"download_url",level:3},{value:"PREFER_GLOBAL_PATH",id:"prefer_global_path",level:3},{value:"DISABLE_POSTINSTALL",id:"disable_postinstall",level:3},{value:"SYSTEM_BINARY",id:"system_binary",level:3},{value:"SYSTEM_BINARY_VERSION_CHECK",id:"system_binary_version_check",level:3},{value:"MD5_CHECK",id:"md5_check",level:3},{value:"ARCHIVE_NAME",id:"archive_name",level:3},{value:"RUNTIME_DOWNLOAD",id:"runtime_download",level:3},{value:"USE_HTTP",id:"use_http",level:3},{value:"USE_ARCHIVE_NAME_FOR_BINARY_NAME",id:"use_archive_name_for_binary_name",level:3},{value:"How to use them in the package.json",id:"how-to-use-them-in-the-packagejson",level:2},{value:"How to use them as Environment Variables",id:"how-to-use-them-as-environment-variables",level:2}],u={toc:m};function k(e){var n=e.components,t=(0,i.Z)(e,r);return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"List of all Config Options"),(0,a.kt)("h2",{id:"list-of-config-options"},"List of Config Options"),(0,a.kt)("h3",{id:"download_dir"},"DOWNLOAD_DIR"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"DOWNLOAD_DIR")," is used to set where the binaries will be located in, this will overwrite all other directories"),(0,a.kt)("p",null,"Directory Priority:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"DOWNLOAD_DIR (Environment Variable over package.json)"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.cache/mongodb-binaries")," (Home Directory Cache) (if ",(0,a.kt)("a",{parentName:"li",href:"#prefer_global_path"},(0,a.kt)("inlineCode",{parentName:"a"},"PREFER_GLOBAL_PATH"))," is active, or binary already exists)"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"projectRoot/node_modules/.cache/mongodb-binaries")," (node-modules cache)"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"./mongodb-binaries")," (relative to ",(0,a.kt)("inlineCode",{parentName:"li"},"process.cwd()"),")")),(0,a.kt)("p",null,"Format:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/path/to/binary/")," (POSIX)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"C:/path/to/binary/")," (DOS)")),(0,a.kt)("h3",{id:"platform"},"PLATFORM"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"PLATFORM")," is used to overwrite which platform should be downloaded"),(0,a.kt)("p",null,"Valid Options are ",(0,a.kt)("inlineCode",{parentName:"p"},"win32"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"darwin"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"linux"),", ",(0,a.kt)("del",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"del"},"sunos")),"(never actually supported, ",(0,a.kt)("a",{parentName:"p",href:"/mongodb-memory-server/docs/guides/error-warning-details#mms002"},"will be removed in 9.0"),")"),(0,a.kt)("h3",{id:"arch"},"ARCH"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"ARCH")," is used to overwrite the Architecture to download for"),(0,a.kt)("p",null,"Valid Options are ",(0,a.kt)("inlineCode",{parentName:"p"},"x64"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"arm64"),", ",(0,a.kt)("del",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"del"},"ia32")),"(",(0,a.kt)("a",{parentName:"p",href:"/mongodb-memory-server/docs/guides/error-warning-details#mms001"},"will be removed in 9.0"),")"),(0,a.kt)("h3",{id:"version"},"VERSION"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"VERSION")," is used to set what mongodb version should be downloaded"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"5.0.8")),(0,a.kt)("p",null,"This Option does not have a effect when ",(0,a.kt)("a",{parentName:"p",href:"#archive_name"},(0,a.kt)("inlineCode",{parentName:"a"},"ARCHIVE_NAME"))," or ",(0,a.kt)("a",{parentName:"p",href:"#download_url"},(0,a.kt)("inlineCode",{parentName:"a"},"DOWNLOAD_URL"))," is defined."),(0,a.kt)("p",null,"Common MongoDB Version formats (",(0,a.kt)("inlineCode",{parentName:"p"},"X")," is a number):"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"X.X.X")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"vX.X.X")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"vX.X-latest"))),(0,a.kt)("p",null,"Search for what version is used:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://dl.mongodb.org/dl/osx/x86_64"},(0,a.kt)("inlineCode",{parentName:"a"},"osx"))," (Note: This one does not list versions above 4.0, see ",(0,a.kt)("a",{parentName:"li",href:"https://jira.mongodb.org/browse/DOCS-14560"},"This Issue"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.mongodb.org/dl/win32"},(0,a.kt)("inlineCode",{parentName:"a"},"windows"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://dl.mongodb.org/dl/linux"},(0,a.kt)("inlineCode",{parentName:"a"},"linux")))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"When using ",(0,a.kt)("a",{parentName:"p",href:"#system_binary"},(0,a.kt)("inlineCode",{parentName:"a"},"SYSTEM_BINARY"))," and ",(0,a.kt)("a",{parentName:"p",href:"#system_binary_version_check"},(0,a.kt)("inlineCode",{parentName:"a"},"SYSTEM_BINARY_VERSION_CHECK")),", ONLY the major, minor, and patch versions of the system binary will be compared against the desired binary."),(0,a.kt)("p",{parentName:"admonition"},"That is, a system binary version of ",(0,a.kt)("inlineCode",{parentName:"p"},"4.2.19-11-ge2f2736a")," will match a mongodb required version of ",(0,a.kt)("inlineCode",{parentName:"p"},"4.2.19"),". DO NOT set the mongodb required version to the full ",(0,a.kt)("inlineCode",{parentName:"p"},"4.2.19-11-ge2f2736a")," version as the check which examines the binary version will strip the additional tags.")),(0,a.kt)("h3",{id:"debug"},"DEBUG"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"DEBUG")," is used to enable Debug Output"),(0,a.kt)("h3",{id:"download_mirror"},"DOWNLOAD_MIRROR"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"DOWNLOAD_MIRROR")," is used to set which mirror to use"),(0,a.kt)("p",null,"Default / Format: ",(0,a.kt)("inlineCode",{parentName:"p"},"https://fastdl.mongodb.org")," (protocol needs to be included)"),(0,a.kt)("p",null,"Also supported is adding an path ",(0,a.kt)("inlineCode",{parentName:"p"},"https://someserver.com/some/path/for/mongodb"),".  "),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"It is discouraged to use query parameters, they may work, but not officially supported")),(0,a.kt)("h3",{id:"download_url"},"DOWNLOAD_URL"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"DOWNLOAD_URL")," is used to overwrite the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"complete"))," URL (including ",(0,a.kt)("a",{parentName:"p",href:"#DOWNLOAD_MIRROR"},(0,a.kt)("inlineCode",{parentName:"a"},"DOWNLOAD_MIRROR")),")"),(0,a.kt)("p",null,"Format: ",(0,a.kt)("inlineCode",{parentName:"p"},"https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1604-4.0.20.tgz")),(0,a.kt)("h3",{id:"prefer_global_path"},"PREFER_GLOBAL_PATH"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"PREFER_GLOBAL_PATH")," is used to force download into ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.cache/mongodb-binaries")," instead of local folder"),(0,a.kt)("h3",{id:"disable_postinstall"},"DISABLE_POSTINSTALL"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"DISABLE_POSTINSTALL")," is used to skip all ",(0,a.kt)("inlineCode",{parentName:"p"},"postinstall")," scripts"),(0,a.kt)("h3",{id:"system_binary"},"SYSTEM_BINARY"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"SYSTEM_BINARY")," is used to set the path to an system binary already existing on the system"),(0,a.kt)("p",null,"Format:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/path/to/binary/mongod")," (POSIX)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"C:/path/to/binary/mongod.exe")," (DOS)")),(0,a.kt)("h3",{id:"system_binary_version_check"},"SYSTEM_BINARY_VERSION_CHECK"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"SYSTEM_BINARY_VERSION_CHECK")," is used to disable the version conflict check if ",(0,a.kt)("a",{parentName:"p",href:"#system_binary"},(0,a.kt)("inlineCode",{parentName:"a"},"SYSTEM_BINARY"))," is set and version returned from ",(0,a.kt)("inlineCode",{parentName:"p"},"mongod_system_binary --version")," does not match ",(0,a.kt)("a",{parentName:"p",href:"#version"},(0,a.kt)("inlineCode",{parentName:"a"},"VERSION"))),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"true")),(0,a.kt)("h3",{id:"md5_check"},"MD5_CHECK"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"MD5_CHECK")," is used to enable an md5 check after download"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"false")),(0,a.kt)("h3",{id:"archive_name"},"ARCHIVE_NAME"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"ARCHIVE_NAME")," is used to overwrite the complete archive name"),(0,a.kt)("p",null,"Format: ",(0,a.kt)("inlineCode",{parentName:"p"},"mongodb-linux-x86_64-ubuntu1604-4.0.20.tgz")),(0,a.kt)("p",null,"This Option does not have a effect when ",(0,a.kt)("a",{parentName:"p",href:"#download_url"},(0,a.kt)("inlineCode",{parentName:"a"},"DOWNLOAD_URL"))," is defined."),(0,a.kt)("h3",{id:"runtime_download"},"RUNTIME_DOWNLOAD"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"RUNTIME_DOWNLOAD")," is used to disable downloading while being in something like ",(0,a.kt)("inlineCode",{parentName:"p"},".start")),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"true")),(0,a.kt)("h3",{id:"use_http"},"USE_HTTP"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"USE_HTTP")," is used to use ",(0,a.kt)("inlineCode",{parentName:"p"},"http")," over ",(0,a.kt)("inlineCode",{parentName:"p"},"https")),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"false")),(0,a.kt)("h3",{id:"use_archive_name_for_binary_name"},"USE_ARCHIVE_NAME_FOR_BINARY_NAME"),(0,a.kt)("p",null,"Option ",(0,a.kt)("inlineCode",{parentName:"p"},"USE_ARCHIVE_NAME_FOR_BINARY_NAME")," is used to use the archive name as binary name"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"false")),(0,a.kt)("h2",{id:"how-to-use-them-in-the-packagejson"},"How to use them in the package.json"),(0,a.kt)("p",null,"To use the config options in the ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json"),", they need to be camelCased (and without ",(0,a.kt)("inlineCode",{parentName:"p"},"_"),"), and need to be in the property ",(0,a.kt)("inlineCode",{parentName:"p"},"config.mongodbMemoryServer")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "config": {\n    "mongodbMemoryServer": {\n      "downloadDir": "/path/to/DownloadDir"\n    }\n  }\n}\n')),(0,a.kt)("p",null,"By default it uses the nearest (upwards) ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"process.cwd()"),".\nTo change this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { findPackageJson } from \"mongodb-memory-server-core/lib/util/resolveConfig\";\n\nfindPackageJson('/custom/path');\n\n// OR\n\nprocess.chdir('/custom/path'); // not recommended\n")),(0,a.kt)("h2",{id:"how-to-use-them-as-environment-variables"},"How to use them as Environment Variables"),(0,a.kt)("p",null,"For Environment Variables an config option must be prefixed with ",(0,a.kt)("inlineCode",{parentName:"p"},"MONGOMS_")),(0,a.kt)("p",null,"Example: ",(0,a.kt)("inlineCode",{parentName:"p"},"MONGOMS_DOWNLOAD_DIR")),(0,a.kt)("p",null,"For boolean Variables, the following will be interpreted as ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"true 1 on yes")))}k.isMDXComponent=!0}}]);