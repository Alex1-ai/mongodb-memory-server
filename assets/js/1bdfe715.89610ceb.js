"use strict";(self.webpackChunkmongodb_memory_server_website=self.webpackChunkmongodb_memory_server_website||[]).push([[99],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return u}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(t),u=r,g=m["".concat(l,".").concat(u)]||m[u]||c[u]||i;return t?a.createElement(g,o(o({ref:n},d),{},{components:t})):a.createElement(g,o({ref:n},d))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9927:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),o=["components"],s={id:"mongo-instance",title:"MongoInstance"},l=void 0,p={unversionedId:"api/classes/mongo-instance",id:"api/classes/mongo-instance",title:"MongoInstance",description:"API Documentation of MongoInstance-Class",source:"@site/../docs/api/classes/mongo-instance.md",sourceDirName:"api/classes",slug:"/api/classes/mongo-instance",permalink:"/mongodb-memory-server/docs/api/classes/mongo-instance",editUrl:"https://github.com/nodkz/mongodb-memory-server/edit/master/docs/../docs/api/classes/mongo-instance.md",tags:[],version:"current",frontMatter:{id:"mongo-instance",title:"MongoInstance"},sidebar:"api",previous:{title:"MongoMemoryReplSet",permalink:"/mongodb-memory-server/docs/api/classes/mongo-memory-replset"},next:{title:"MongoBinary",permalink:"/mongodb-memory-server/docs/api/classes/mongo-binary"}},d={},c=[{value:"Functions",id:"functions",level:2},{value:"new",id:"new",level:3},{value:"debug",id:"debug",level:3},{value:"create",id:"create",level:3},{value:"prepareCommandArgs",id:"preparecommandargs",level:3},{value:"start",id:"start",level:3},{value:"stop",id:"stop",level:3},{value:"_launchMongod",id:"_launchmongod",level:3},{value:"_launchKiller",id:"_launchkiller",level:3},{value:"errorHandler",id:"errorhandler",level:3},{value:"closeHandler",id:"closehandler",level:3},{value:"stderrHandler",id:"stderrhandler",level:3},{value:"stdoutHandler",id:"stdouthandler",level:3},{value:"Values",id:"values",level:2},{value:"instanceOpts",id:"instanceopts",level:3},{value:"binaryOpts",id:"binaryopts",level:3},{value:"spawnOpts",id:"spawnopts",level:3},{value:"extraConnectionOptions",id:"extraconnectionoptions",level:3},{value:"mongodProcess",id:"mongodprocess",level:3},{value:"killerProcess",id:"killerprocess",level:3},{value:"isInstancePrimary",id:"isinstanceprimary",level:3},{value:"isInstanceReady",id:"isinstanceready",level:3},{value:"isReplSet",id:"isreplset",level:3}],m={toc:c};function u(e){var n=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"API Documentation of ",(0,i.kt)("inlineCode",{parentName:"p"},"MongoInstance"),"-Class"),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"new"},"new"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"constructor(opts: Partial<MongodOpts>)")),(0,i.kt)("p",null,"Create an new Instance without starting it"),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"When directly starting the instance, ",(0,i.kt)("a",{parentName:"p",href:"#static-run"},(0,i.kt)("inlineCode",{parentName:"a"},"run"))," should be used"))),(0,i.kt)("h3",{id:"debug"},"debug"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"private debug(msg: string): void")),(0,i.kt)("p",null,"Format input with debug-message template"),(0,i.kt)("h3",{id:"create"},"create"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"static async create(opts: Partial<MongodOpts>): Promise<MongoInstance>")),(0,i.kt)("p",null,"Create an new Instance and start it (while being an Promise)"),(0,i.kt)("h3",{id:"preparecommandargs"},"prepareCommandArgs"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"prepareCommandArgs(): string[]")),(0,i.kt)("p",null,"Constructs the Command Arguments"),(0,i.kt)("h3",{id:"start"},"start"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"async start(): Promise<void>")),(0,i.kt)("p",null,"Start the ",(0,i.kt)("inlineCode",{parentName:"p"},"mongod")," and the watcher processes"),(0,i.kt)("h3",{id:"stop"},"stop"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"async stop(): Promise<boolean>")),(0,i.kt)("p",null,"Stop the ",(0,i.kt)("inlineCode",{parentName:"p"},"mongod")," and the watcher processes"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Will not Error if instance is not running"))),(0,i.kt)("h3",{id:"_launchmongod"},"_launchMongod"),(0,i.kt)("span",{class:"badge badge--warning"},"Internal"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"_launchMongod(mongoBin: string): ChildProcess")),(0,i.kt)("p",null,"Actually spawn the ",(0,i.kt)("inlineCode",{parentName:"p"},"mongod")," process with ",(0,i.kt)("inlineCode",{parentName:"p"},"ChildProcess"),", used by ",(0,i.kt)("a",{parentName:"p",href:"#run"},(0,i.kt)("inlineCode",{parentName:"a"},"run"))),(0,i.kt)("h3",{id:"_launchkiller"},"_launchKiller"),(0,i.kt)("span",{class:"badge badge--warning"},"Internal"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"_launchKiller(parentPid: number, childPid: number): ChildProcess")),(0,i.kt)("p",null,"Spawn an killer process that keeps watch over the ",(0,i.kt)("inlineCode",{parentName:"p"},"mongod")," process"),(0,i.kt)("h3",{id:"errorhandler"},"errorHandler"),(0,i.kt)("span",{class:"badge badge--warning"},"Internal"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"errorHandler(err: string): void")),(0,i.kt)("p",null,"Error handler for the ",(0,i.kt)("inlineCode",{parentName:"p"},"mongod")," process"),(0,i.kt)("h3",{id:"closehandler"},"closeHandler"),(0,i.kt)("span",{class:"badge badge--warning"},"Internal"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"closeHandler(code: number, signal: string): void")),(0,i.kt)("p",null,"Close handler for the ",(0,i.kt)("inlineCode",{parentName:"p"},"mongod")," process"),(0,i.kt)("h3",{id:"stderrhandler"},"stderrHandler"),(0,i.kt)("span",{class:"badge badge--warning"},"Internal"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"stderrHandler(message: string | Buffer): void")),(0,i.kt)("p",null,"STDERR handler for the ",(0,i.kt)("inlineCode",{parentName:"p"},"mongod")," process"),(0,i.kt)("h3",{id:"stdouthandler"},"stdoutHandler"),(0,i.kt)("span",{class:"badge badge--warning"},"Internal"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"stdoutHandler(message: string | Buffer): void")),(0,i.kt)("p",null,"STDOUT handler for the ",(0,i.kt)("inlineCode",{parentName:"p"},"mongod")," process",(0,i.kt)("br",{parentName:"p"}),"\n","Matches process output against known formats and raise events"),(0,i.kt)("h2",{id:"values"},"Values"),(0,i.kt)("h3",{id:"instanceopts"},"instanceOpts"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"instanceOpts: MongoInstanceOpts")),(0,i.kt)("p",null,"Stores the Instance Options"),(0,i.kt)("h3",{id:"binaryopts"},"binaryOpts"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"readonly binaryOpts: Readonly<MongoBinaryOpts>")),(0,i.kt)("p",null,"Stores the Binary Options"),(0,i.kt)("h3",{id:"spawnopts"},"spawnOpts"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"readonly spawnOpts: Readonly<SpawnOptions>")),(0,i.kt)("p",null,"Stores the Spawn Options"),(0,i.kt)("h3",{id:"extraconnectionoptions"},"extraConnectionOptions"),(0,i.kt)("span",{class:"badge badge--warning"},"Internal"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"extraConnectionOptions?: MongoClientOptions")),(0,i.kt)("p",null,"Contains extra Connection options used for ",(0,i.kt)("inlineCode",{parentName:"p"},"mongoClient.connect"),", this is mainly used for authentication"),(0,i.kt)("h3",{id:"mongodprocess"},"mongodProcess"),(0,i.kt)("span",{class:"badge badge--warning"},"Internal"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"mongodProcess?: ChildProcess")),(0,i.kt)("p",null,"Stores the active process reference for the ",(0,i.kt)("inlineCode",{parentName:"p"},"mongod")," process"),(0,i.kt)("h3",{id:"killerprocess"},"killerProcess"),(0,i.kt)("span",{class:"badge badge--warning"},"Internal"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"killerProcess?: ChildProcess")),(0,i.kt)("p",null,"Stores the active process reference for the killer process"),(0,i.kt)("h3",{id:"isinstanceprimary"},"isInstancePrimary"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"isInstancePrimary: boolean")),(0,i.kt)("p",null,"Stores that the process is an Primary (ReplSet) (event emitted when found in STDOUT)"),(0,i.kt)("h3",{id:"isinstanceready"},"isInstanceReady"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"isInstanceReady: boolean")," (event emitted when found in STDOUT)"),(0,i.kt)("p",null,"Stores that the process is fully started"),(0,i.kt)("h3",{id:"isreplset"},"isReplSet"),(0,i.kt)("p",null,"Typings: ",(0,i.kt)("inlineCode",{parentName:"p"},"isReplSet: boolean")),(0,i.kt)("p",null,"Stores that the process is in an ReplSet, is ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," when ",(0,i.kt)("a",{parentName:"p",href:"#instanceopts"},(0,i.kt)("inlineCode",{parentName:"a"},"instanceOpts.replSet"))," is defined and truthy"))}u.isMDXComponent=!0}}]);